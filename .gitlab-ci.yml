variables:
  OPERATION:
    description: "Select CI/CD-operation"
    value: terraform
    options:
      - terraform
      - ansible
      - k8s
  TF_ROOT: ${CI_PROJECT_DIR}/infra
  TF_IN_AUTOMATION: "true"

stages:
  - tests
  - plan
  - apply
  - terratest
  - ansible_deploy
  - destroy
  - build
  - package

default:
  before_script:
    - cd ${TF_ROOT}
    - echo ${AUTHORIZED_KEY} | base64 -d > ${TF_ROOT}/authorized_key.json
    - export TF_VAR_service_account_key_file=${TF_ROOT}/authorized_key.json

security-scan-job:
  stage: tests
  image: bridgecrew/checkov:latest
  script:
    - checkov -d . --compact --quiet
  rules:
    - if: $OPERATION == "terraform"
      when: always
  allow_failure: true

terraform-plan-job:
  stage: plan
  script:
    - terraform init 
    - terraform plan
  rules:
    - if: $OPERATION == "terraform"
      when: always 

terraform-apply-job:
  stage: apply
  script:
    - terraform init
    - terraform apply -auto-approve
  rules:
    - if: $OPERATION == "terraform"
      when: manual

terraform-destroy-job:
  stage: destroy
  script:
    - terraform init
    - terraform destroy -auto-approve
  rules:
    - if: $OPERATION == "terraform"
      when: manual

terratest-job:
  stage: terratest
  script:
    - cd test
    - go mod init terratest
    - go mod tidy
    - go test -v
  needs:
    - job: terraform-apply-job
      optional: true
  rules:
    - when: manual
      if: $OPERATION == "terraform"
  allow_failure: false

ansible-deploy-job:
  stage: ansible_deploy
  image: williamyeh/ansible:ubuntu18.04
  script:
    - mkdir -p ~/.ssh
    - echo ${SSH_PRIVATE_KEY} | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - terraform init
    - cd ${CI_PROJECT_DIR}/ansible
    - ansible-playbook vault-playbook.yaml
  rules:
    - if: $OPERATION == "ansible"


# Сборка и пуш Docker-образов в DockerHub
#build-and-push-images:

# Упаковка и пуш Helm-чарта в Nexus
#package-helm-chart:
