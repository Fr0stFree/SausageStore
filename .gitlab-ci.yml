variables:
  OPERATION:
    description: "Select CI/CD-operation"
    value: "terraform"
    options:
      - "terraform"
      - "ansible"
      - "k8s"
  AUTHORIZED_KEY:
    description: "Base64-encoded Yandex Cloud service account key file in JSON format. Must be set in CI/CD variables"
    value: ${AUTHORIZED_KEY}
  TF_ROOT: ${CI_PROJECT_DIR}/infra
  TF_IN_AUTOMATION: "true"
  TF_VAR_service_account_key_file:
    description: "Path to the yandex cloud service account key file. Must be set in CI/CD variables"
    value: ${TF_ROOT}/authorized_key.json
  TF_VAR_zone:
    value: ${TF_VAR_zone}
    description: "Yandex Cloud zone. Must be set in CI/CD variables"
  TF_VAR_cloud_id:
    description: "Yandex Cloud ID. Must be set in CI/CD variables"
    value: ${TF_VAR_cloud_id}

stages:
  - tests
  - plan
  - apply
  - terratest
  - ansible_deploy
  - destroy
  - build
  - package

default:
  before_script:
    - cd ${TF_ROOT}
    - echo ${AUTHORIZED_KEY} | base64 -d > ${TF_VAR_service_account_key_file}

security-scan-job:
  stage: tests
  image: bridgecrew/checkov:latest
  script:
    - checkov -d . --compact --quiet
  rules:
    - if: $OPERATION == "terraform"
      when: always
  allow_failure: true

terraform-plan-job:
  stage: plan
  script:
    - echo "Running Terraform plan..."
    - terraform init 
    - terraform plan
  rules:
    - if: $OPERATION == "terraform"
      when: always 

terraform-apply-job:
  stage: apply
  script:
    - echo "Applying Terraform..."
    - terraform init
    - terraform apply -auto-approve
  rules:
    - if: $OPERATION == "terraform"
      when: manual

terraform-destroy-job:
  stage: destroy
  script:
    - echo "Destroying Terraform infrastructure..."
    - terraform init
    - terraform destroy -auto-approve
  rules:
    - if: $OPERATION == "terraform"
      when: manual

terratest-job:
  stage: terratest
  script:
    - cd test
    - go mod init terratest
    - go mod tidy
    - go test -v
  needs:
    - terraform-apply-job
  dependencies:
    - terraform-apply-job
  allow_failure: false

# Деплой ansible-playbook
#ansible-deploy:

# Сборка и пуш Docker-образов в DockerHub
#build-and-push-images:

# Упаковка и пуш Helm-чарта в Nexus
#package-helm-chart:
